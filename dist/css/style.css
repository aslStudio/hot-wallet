a,
abbr,
acronym,
address,
applet,
article,
aside,
audio,
b,
big,
blockquote,
body,
canvas,
caption,
center,
cite,
code,
dd,
del,
details,
dfn,
div,
dl,
dt,
em,
embed,
fieldset,
figcaption,
figure,
footer,
form,
h1,
h2,
h3,
h4,
h5,
h6,
header,
hgroup,
html,
i,
iframe,
img,
ins,
kbd,
label,
legend,
li,
mark,
menu,
nav,
object,
ol,
output,
p,
pre,
q,
ruby,
s,
samp,
section,
small,
span,
strike,
strong,
sub,
summary,
sup,
table,
tbody,
td,
tfoot,
th,
thead,
time,
tr,
tt,
u,
ul,
var,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  vertical-align: baseline;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote::after,
blockquote::before,
q::after,
q::before {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

@font-face {
  font-family: "Inter";
  src: url("../fonts/Inter-Bold.woff2") format("woff2"), url("../fonts/Inter-Bold.woff") format("woff");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url("../fonts/Inter-Regular.woff2") format("woff2"), url("../fonts/Inter-Regular.woff") format("woff");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
html {
  font-size: 12px;
  scroll-behavior: smooth;
}

body {
  position: relative;
  font-size: toRem(14);
  -webkit-font-smoothing: antialiased;
  color: #29373B;
  font-family: "Inter", -apple-system, system-ui, BlinkMacSystemFont, Helvetica, Arial, sans-serif;
  background-color: #FFFCF9;
  -webkit-backface-visibility: hidden;
  -moz-osx-font-smoothing: grayscale;
  min-width: 320px;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  scroll-snap-type: y mandatory;
  scroll-behavior: smooth;
}

img {
  height: auto;
  width: auto;
}

.container {
  box-sizing: border-box;
  margin: 0 auto;
  width: 100%;
  max-width: toRem(1200);
  padding-left: 6.25%;
  padding-right: 6.25%;
}
@media (min-width: 768px) {
  .container {
    padding-right: 5.58%;
    padding-left: 5.58%;
  }
}
@media (min-width: 1200px) {
  .container {
    padding-right: toRem(84);
    padding-left: toRem(84);
  }
}

main {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
}

.button,
button {
  border: none;
  cursor: pointer;
  font-family: "Inter", -apple-system, system-ui, BlinkMacSystemFont, "Helvetica", "Arial", "sans-serif";
  background: none;
  padding: 0;
  margin: 0;
  overflow: visible;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  text-align: center;
}

*:focus {
  outline: none;
}

a {
  text-decoration: none;
  color: inherit;
}

[data-src] {
  transition: opacity 0.3s ease;
  opacity: 0;
  will-change: transform, opacity;
}

.lazyload {
  opacity: 0;
  will-change: transform, opacity;
}

.lazyloaded {
  opacity: 1;
}

.hidden {
  display: none !important;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
